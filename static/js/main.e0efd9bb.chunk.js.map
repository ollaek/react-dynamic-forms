{"version":3,"sources":["../../src/components/Input.js","../../src/index.js","App.js","index.js"],"names":["InputComponent","name","label","type","placeholder","value","handleChange","error","Form","as","md","controlId","onChange","isInvalid","ExampleComponent","schema","submit","feilds","initialValues","buttonText","validationSchema","onSubmit","handleSubmit","values","errors","noValidate","key","field","App","signupValidationSchema","Yup","shape","max","required","email","password","matches","passwordConfirm","oneOf","console","log","ReactDOM","render","document","getElementById"],"mappings":"iTAIaA,EAAiB,SAAC,GAAmE,IAAjEC,EAAiE,EAAjEA,KAAMC,EAA2D,EAA3DA,MAAOC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,YAAaC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,MACpF,OACE,kBAACC,EAAA,EAAD,OAAYC,GAAZ,IAAqBC,GAArB,IAA4BC,UAAU,sBACpC,kBAACH,EAAA,EAAD,WADF,GAEE,kBAACA,EAAA,EAAD,SACEL,KADF,EAEEC,YAFF,EAGEH,KAHF,EAIEI,MAJF,EAKEO,SALF,EAMEC,YAAaN,IAEf,kBAACC,EAAA,EAAD,kBAAuBL,KAAK,WAXhC,KCAWW,EAAmB,SAAC,GAM3B,IALJC,EAKI,EALJA,OACAC,EAII,EAJJA,OACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,cACAC,EACI,EADJA,WAEA,OACE,uBACEC,iBADF,EAEEC,SAFF,EAGEH,cAAeA,IAEd,gBACCI,EADD,eAEChB,EAFD,eAICiB,EAJD,SAOCC,EAPD,gBASC,uBAAMC,YAAN,EAAiBJ,SAAUC,GACxBL,GACCA,EAAA,KAAW,YACT,OACE,kBAACT,EAAA,EAAD,KAAUkB,IAAKC,EAAM1B,MACnB,qBACEC,MAAOyB,EADT,MAEExB,KAAMwB,EAFR,KAGEvB,YAAauB,EAHf,YAIE1B,KAAM0B,EAJR,KAKEtB,MAAOkB,EAAOI,EALhB,MAMErB,aANF,EAOEC,MAAOiB,EAAOG,EAAD,YAKvB,uBAAQxB,KAAK,UA1BhB,Q,cCwDQyB,MApEH,KACV,MAAMC,EAAyBC,MAAaC,MAAM,CAChD9B,KAAM6B,MACHE,IAAI,GAAI,2CACRC,SAAS,gCACZC,MAAOJ,MACJI,MAAM,8BACND,SAAS,yBACZE,SAAUL,MACPG,SAAS,2BACTG,QACC,uEACA,qHAEJC,gBAAiBP,MACdQ,MAAM,CAACR,IAAQ,YAAa,MAAO,wBACnCG,SAAS,kCAyCd,OACE,kBAAC,EAAD,CACElB,OAAQc,EACRb,OAdcO,IAChBgB,QAAQC,IAAIjB,IAcVN,OA1CW,CACb,CACEf,MAAO,WACPD,KAAM,OACNE,KAAM,OACNC,YAAa,0BAEf,CACEF,MAAO,SACPD,KAAM,QACNE,KAAM,QACNC,YAAa,2BAEf,CACEF,MAAO,WACPD,KAAM,WACNE,KAAM,WACNC,YAAa,YAEf,CACEF,MAAO,mBACPD,KAAM,kBACNE,KAAM,WACNC,YAAa,aAoBbc,cAZY,CACdjB,KAAM,GACNiC,MAAO,GACPC,SAAU,GACVE,gBAAgB,IASdlB,WAAW,YC/DjBsB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e0efd9bb.chunk.js","sourcesContent":["/* eslint-disable prettier/prettier */\r\nimport React from 'react'\r\nimport { Form, Col } from 'react-bootstrap'\r\n\r\nexport const InputComponent = ({ name, label, type, placeholder, value, handleChange, error }) => {\r\n  return (\r\n    <Form.Group as={Col} md='3' controlId='validationFormik04'>\r\n      <Form.Label>{label}</Form.Label>\r\n      <Form.Control\r\n        type={type}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={handleChange}\r\n        isInvalid={!!error}\r\n      />\r\n      <Form.Control.Feedback type='invalid'>\r\n        {error}\r\n      </Form.Control.Feedback>\r\n    </Form.Group>\r\n  )\r\n}\r\n","import React from 'react'\nimport { Formik } from 'formik'\nimport { Form, Button } from 'react-bootstrap'\nimport { InputComponent } from './components/Input'\n\nexport const ExampleComponent = ({\n  schema,\n  submit,\n  feilds,\n  initialValues,\n  buttonText\n}) => {\n  return (\n    <Formik\n      validationSchema={schema}\n      onSubmit={submit}\n      initialValues={initialValues}\n    >\n      {({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        touched,\n        isValid,\n        errors\n      }) => (\n        <Form noValidate onSubmit={handleSubmit}>\n          {feilds &&\n            feilds.map((field) => {\n              return (\n                <Form.Row key={field.name}>\n                  <InputComponent\n                    label={field.label}\n                    type={field.type}\n                    placeholder={field.placeholder}\n                    name={field.name}\n                    value={values[field.name]}\n                    handleChange={handleChange}\n                    error={errors[field.name]}\n                  />\n                </Form.Row>\n              )\n            })}\n          <Button type='submit'>{buttonText}</Button>\n        </Form>\n      )}\n    </Formik>\n  )\n}\n","import React from 'react'\n\nimport { ExampleComponent } from 'react-dynamic-forms'\nimport * as Yup from 'yup'\nimport 'react-dynamic-forms/dist/index.css'\n\nconst App = () => {\n  const signupValidationSchema = Yup.object().shape({\n    name: Yup.string()\n      .max(40, 'Please enter no more than 40 characters')\n      .required('Please enter your first name'),\n    email: Yup.string()\n      .email('Please enter a valid email')\n      .required('Please enter an email'),\n    password: Yup.string()\n      .required('Please enter a password')\n      .matches(\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/,\n        'Please enter password that consist of at least 8 characters, number, special character, capital and small letters'\n      ),\n    passwordConfirm: Yup.string()\n      .oneOf([Yup.ref('password'), null], 'Passwords must match')\n      .required('Password confirm is required')\n  })\n\n  const fields = [\n    {\n      label: 'Username',\n      name: 'name',\n      type: 'test',\n      placeholder: 'please enter your name'\n    },\n    {\n      label: 'E-mail',\n      name: 'email',\n      type: 'email',\n      placeholder: 'please enter your email'\n    },\n    {\n      label: 'Password',\n      name: 'password',\n      type: 'password',\n      placeholder: '********'\n    },\n    {\n      label: 'Confirm Password',\n      name: 'passwordConfirm',\n      type: 'password',\n      placeholder: '********'\n    }\n  ]\n\n  const onSubmit = (values) => {\n    console.log(values)\n  }\n\n  const initial = {\n    name: '',\n    email: '',\n    password: '',\n    passwordConfirm:\"\"\n  }\n\n  return (\n    <ExampleComponent\n      schema={signupValidationSchema}\n      submit={onSubmit}\n      feilds={fields}\n      initialValues={initial}\n      buttonText=\"SignUp\"\n    />\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}